============================================================GENERATOR AND ITERATOR ====================================================================
>>>s=[1,2,3,4]
>>>i=iter(s)
>>>for j in s:
...     print(next(i))
4
3
2
1
   
>>>def reverse(data):
...    for index in range(len(data)-1, 0, -1):
...        yield(data[index])

>>>s=reverse('ganesh')
>>>print(s)
<generator object reverse at 0x7fcab4eb1cf0>  
>>>print(next(s))
h

======================================================EXCEPTIONS HANDLING=============================================================================
>>>iter_obj = iter([1,2,3,4])
>>>while True:
...    try:
...        element = next(iter_obj)
...        print(element)
...    except StopIteration:
...        print("ended")
...        break
...

1
2
3
4
ended

>>> def divide(x, y):
...     try:
...         result = x / y
...     except ZeroDivisionError:
...         print("division by zero!")
...     else:
...         print("result is", result)
...     finally:
...         print("executing finally clause")
...
>>> divide(2, 1)
result is 2.0
executing finally clause
>>> divide(2, 0)
division by zero!
executing finally clause
>>> divide("2", "1")
executing finally clause
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in divide
TypeError: unsupported operand type(s) for /: 'str' and 'str'


=========================================================USER DEFINED EXCEPTIONS=======================================================================
>>> class CustomError(Exception):
...     pass
...
>>> raise CustomError
Traceback (most recent call last):
...
__main__.CustomError
>>> raise CustomError("An error occurred")
Traceback (most recent call last):
...
__main__.CustomError: An error occurred

>>>class ganesh(Exception):
...	pass
...
>>>number=1
>>>while True:
...	verify=int(input("Enter a number"))
...	try:
...		if(number==verify):
...			raise ganesh
...	break
...	except ganesh:
...		print("Hello Enter one")

Enter a number 10
Hello Enter one
Enter a number 1





=========================================================MODULES AND PACKAGES==========================================================================

>>>import math
>>>math.factorial(10)
3628800 

>>>from math import factorial as x
>>>x(5)
120
>>>from math import *
>>> import sys
>>> print(sys.path)
['', '/usr/lib/python35.zip', '/usr/lib/python3.5', '/usr/lib/python3.5/plat-x86_64-linux-gnu', '/usr/lib/python3.5/lib-dynload', '/usr/local/lib/python3.5/dist-packages', '/usr/lib/python3/dist-packages']
>>> sys.ps1
'>>> '
>>> sys.ps2
'... '
>>> sys.ps10
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'sys' has no attribute 'ps10'
>>> sys.ps4
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'sys' has no attribute 'ps4'
>>> sys.ps1='ck'
ck
ck
ck
ck
ck
ck
ckh
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'h' is not defined
cksys.ps1=">>>"
>>>sys.ps1"SOLLUGA GANESH"
  File "<stdin>", line 1
    sys.ps1"SOLLUGA GANESH"
                          ^
SyntaxError: invalid syntax
>>>sys.ps1="SOLLUGA GANESH"
SOLLUGA GANESH
