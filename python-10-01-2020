=============================================================SET AND DICTIONARIES======================================================================
>>> l=[1,2,3,4,5]
>>> del l[0]
>>> l
[2, 3, 4, 5]
>>> del l
>>> l
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'l' is not defined
>>> t=(1,2,3,4,5)
>>> t.add(10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'tuple' object has no attribute 'add'
>>> t="ganeshg",10,20
>>> t
('ganeshg', 10, 20)
>>> l=()
>>> del l
>>> l=t+t
>>> l
('ganeshg', 10, 20, 'ganeshg', 10, 20)
>>> del l[0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'tuple' object doesn't support item deletion
>>> len(t)
3
>>> t.length
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'tuple' object has no attribute 'length'
>>> t="ganesh",
>>> t
('ganesh',)
>>> l=["Ganesh",]
>>> l
['Ganesh']
>>> l=["Ganesh"}
  File "<stdin>", line 1
    l=["Ganesh"}
               ^
SyntaxError: invalid syntax
>>> l=["Ganesh"]
>>> l
['Ganesh']
>>> x,y,z=t
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: not enough values to unpack (expected 3, got 1)
>>> t="ganeshg",10,20
>>> x,y,z = t
>>> a
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'a' is not defined
>>> x
'ganeshg'
>>> y
10
>>> z
20
>>> t
('ganeshg', 10, 20)
>>> t=set(t)
>>> t
{10, 20, 'ganeshg'}
>>> t
{10, 20, 'ganeshg'}
>>> t.add("ganesh")
>>> t
{'ganesh', 10, 20, 'ganeshg'}
>>> a="abcde"
>>> b="abcdefghijklmnopqrstuvwxyz"
>>> a=set(a)
>>> b=set(b)
>>> b
{'y', 'l', 'd', 'z', 'p', 'h', 'c', 'w', 'f', 'r', 'v', 'j', 'a', 'n', 'i', 'm', 'x', 't', 'o', 'u', 'k', 'b', 'e', 'q', 'g', 's'}
>>> a
{'c', 'd', 'e', 'b', 'a'}
>>> a in b
False
>>> 'a' in b
True
>>> '@' in b
False
>>> 'a' is not b
True
>>> a is not b
True
>>> a+b
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'set' and 'set'
>>> z=a+b
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'set' and 'set'
>>> a-b
set()
>>> b-a
{'y', 'v', 'j', 'n', 's', 'l', 'i', 'm', 'x', 't', 'p', 'o', 'r', 'h', 'u', 'w', 'f', 'k', 'q', 'g', 'z'}
>>> -b
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: bad operand type for unary -: 'set'
>>> a&b
{'c', 'd', 'a', 'b', 'e'}
>>> b&a
{'c', 'd', 'a', 'b', 'e'}
>>> a|b
{'y', 'v', 'j', 'a', 'n', 's', 'l', 'i', 'm', 'd', 'x', 't', 'p', 'o', 'r', 'h', 'u', 'c', 'w', 'f', 'k', 'b', 'e', 'q', 'g', 'z'}
>>> b|a
{'y', 'v', 'j', 'a', 'n', 's', 'l', 'i', 'm', 'd', 'x', 't', 'p', 'o', 'r', 'h', 'u', 'c', 'w', 'f', 'k', 'b', 'e', 'q', 'g', 'z'}
>>> a^b
{'y', 'v', 'j', 'n', 's', 'l', 'i', 'm', 'x', 't', 'p', 'o', 'r', 'h', 'u', 'w', 'f', 'k', 'q', 'g', 'z'}
>>> b^a
{'y', 'l', 'z', 'p', 'h', 'w', 'f', 'r', 'v', 'j', 'n', 'i', 'm', 'x', 't', 'o', 'u', 'k', 'q', 'g', 's'}
>>> 'a'^b
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for ^: 'str' and 'set'
>>> x={i for i in b if not in 'asdfghjkl'}
  File "<stdin>", line 1
    x={i for i in b if not in 'asdfghjkl'}
                            ^
SyntaxError: invalid syntax
>>> b
{'y', 'l', 'd', 'z', 'p', 'h', 'c', 'w', 'f', 'r', 'v', 'j', 'a', 'n', 'i', 'm', 'x', 't', 'o', 'u', 'k', 'b', 'e', 'q', 'g', 's'}
>>> b.remove('a')
>>> b
{'y', 'l', 'd', 'z', 'p', 'h', 'c', 'w', 'f', 'r', 'v', 'j', 'n', 'i', 'm', 'x', 't', 'o', 'u', 'k', 'b', 'e', 'q', 'g', 's'}
>>> x={i for i in b if i not in 'asdfghjkl'}
>>> x
{'y', 'p', 'v', 'o', 'n', 'u', 'c', 'w', 'i', 'z', 'b', 'e', 'q', 'm', 'x', 'r', 't'}
>>> x-b
set()
>>> b-x
{'j', 'h', 'g', 'l', 'f', 'k', 'd', 's'}
>>> b=forsenset(b)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'forsenset' is not defined
>>> 
aspire1326@aspire1326:~$ sudo apt update python
[sudo] password for aspire1326: 
E: The update command takes no arguments
aspire1326@aspire1326:~$ sudo apt update python3.5
E: The update command takes no arguments
aspire1326@aspire1326:~$ sudo apt update python
E: The update command takes no arguments
aspire1326@aspire1326:~$ sudo apt python update
E: Invalid operation python
aspire1326@aspire1326:~$ sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1
update-alternatives: using /usr/bin/python3.5 to provide /usr/bin/python3 (python3) in auto mode
aspire1326@aspire1326:~$ sudo update-alternatives --config python3
There is only one alternative in link group python3 (providing /usr/bin/python3): /usr/bin/python3.5
Nothing to configure.
aspire1326@aspire1326:~$ python3 -V
Python 3.5.2
aspire1326@aspire1326:~$ python3.5
Python 3.5.2 (default, Oct  8 2019, 13:06:37) 
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> l=[1,2,3,4]
>>> l.popleft()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'popleft'
>>> from collections import deque
>>> l=deque[1,2,3,4]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'type' object is not subscriptable
>>> l=deque([1,2,3,4])
>>> l.popleft()
1
>>> l.popright()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'collections.deque' object has no attribute 'popright'
>>> l=collections([1,2,3,4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'collections' is not defined
>>> l=collections.deque([1,2,3,4])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'collections' is not defined
>>> import collections
>>> l=collections.deque([1,2,3,4])
>>>  dict(sape=4139, guido=4127, jack=4098)
  File "<stdin>", line 1
    dict(sape=4139, guido=4127, jack=4098)
    ^
IndentationError: unexpected indent
>>> dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])
{'guido': 4127, 'jack': 4098, 'sape': 4139}
>>> tel = {'jack': 4098, 'sape': 4139}
>>> tel['guido'] = 4127
>>> tel
{'jack': 4098, 'guido': 4127, 'sape': 4139}
>>> del tel['sape']
>>> tel['irv'] = 4127
>>> tel
{'jack': 4098, 'guido': 4127, 'irv': 4127}
>>> list(tel.keys())
['jack', 'guido', 'irv']
>>> sorted(tel.keys())
['guido', 'irv', 'jack']
>>> 'guido' in tel
True
>>> {x: x**2 for x in (2, 4, 6)}
{2: 4, 4: 16, 6: 36}
>>> knights = {'gallahad': 'the pure', 'robin': 'the brave'}
>>> for k, v in knights.items():
...     print(k,v)
... 
robin the brave
gallahad the pure
>>> for i, v in enumerate(['tic', 'tac', 'toe']):
...     print(i,v)
... 
0 tic
1 tac
2 toe
>>> questions = ['name', 'quest', 'favorite color']
>>> answers = ['lancelot', 'the holy grail', 'blue']
>>> for q, a in zip(questions, answers):
...      print('What is your {0}?  It is {1}.'.format(q, a))
... 
What is your name?  It is lancelot.
What is your quest?  It is the holy grail.
What is your favorite color?  It is blue.
>>>  for i in reversed(range(1, 10)):
  File "<stdin>", line 1
    for i in reversed(range(1, 10)):
    ^
IndentationError: unexpected indent
>>> for i in reversed(range(1, 10)):
...     print(i)
... 
9
8
7
6
5
4
3
2
1
>>> basket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']
>>> for f in sorted(set(basket)):
...     print(f)
... 
apple
banana
orange
pear
>>> string1, string2, string3 = '', 'Trondheim', 'Hammer Dance'
>>> 
KeyboardInterrupt
>>> string1, string2, string3 = '', 'Trondheim', 'Hammer Dance'
>>> string1
''
>>> string2
'Trondheim'
>>> string3
'Hammer Dance'
>>> string1 or string2 or string3
'Trondheim'
>>> 

